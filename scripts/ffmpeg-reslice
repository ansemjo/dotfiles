#!/usr/bin/env bash

# cut sections and concatenate them directly
# --------------------------------------------------
ffmpeg-reslice() {

  usage() { cat <<USAGE
usage: $ ffmpeg-reslice -s 00:00-05:00 [-s ...] movie.mp4 [sliced.mp4]
  -s from-until   section specifier timestamps [hh:mm:ss.nnn]
  movie.mp4       input file
  sliced.mp4      output file (default: \${input}_sliced.mp4)
USAGE
}

  # parse commandline for sections
  local SECTIONS=()
  local opt OPTIND
  while getopts 's:' opt; do
    case "$opt" in
      s) SECTIONS+=("-s" "$OPTARG") ;;
      *) usage >&2; return 1 ;;
    esac
  done
  shift $((OPTIND - 1))

  # one argument required with filename
  if [[ -z ${1+undef} ]]; then
    echo "err: input filename required"
    usage >&2
    return 1
  fi
  INFILE="$1"
  local name ext
  name="$(basename "$INFILE")"
  ext="${name##*.}"
  shift 1

  # outfile name generator
  if [[ -n ${2+def} ]]; then
    OUTFILE="$2"
  else
    OUTFILE="${name}_resliced.${ext}"
  fi

  # scripted slice and concatenate
  ffmpeg-sections "${SECTIONS[@]}" "$INFILE" -loglevel error -stats
  # shellcheck disable=SC2012
  ls -1 "${name}"_s??_*."${ext}" | ffmpeg-concat -loglevel error -stats "$OUTFILE"
  rm -fv "${name}"_s??_*."${ext}"

}

ffmpeg-reslice "$@"
