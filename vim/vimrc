
" ---------- GENERAL ----------

" use vim defaults instead of strict vi compatibility
set nocompatible

" do not load defaults.vim if .vimrc is missing
let skip_defaults_vim = 1

" modelines have historically been a source of security/resource
" vulnerabilities -- disable by default, even when 'nocompatible' is set
set nomodeline

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" persitence with ~/.vim/viminfo (:help 'viminfo')
silent !mkdir -p ~/.vim
set viminfo=<0,'5,@5,/10,:20,f0,h
set viminfofile=~/.vim/viminfo

" put backup files in home folder location
silent !mkdir -p ~/.vim/tmp
set backupdir=~/.vim/tmp,~/.tmp,~/tmp,.,~/
set directory=~/.vim/tmp,~/.tmp,~/tmp,.,~/

" always show status line
set laststatus=2

" show the cursor position and highlight the line
set ruler cursorline

" display partial commands
set showcmd

" turn on the wild menu (completion matches in status line)
set wildmenu

" ignore case by default but try to be smart when searching
set ignorecase
set smartcase

" highlight search results
set hlsearch

" keybinding to turn off search highlight
nnoremap <leader>/ :nohlsearch<CR>

" incremental search, show results while you are typing
set incsearch

" do not redraw while executing macros (performance)
set lazyredraw

" show matching brackets
set showmatch

" disable mouse usage by default
set mouse=

" disable annoying sounds
set noerrorbells
set visualbell
set t_vb=
set tm=500

" enable colors and syntax highlighting
syntax on
colorscheme default

" only if support for autocommands is present
if has("autocmd")

  " enable file type detection
  filetype plugin indent on

  " jump to the last known cursor position when editing a file
  autocmd BufReadPost *
    \ if line("'\"") >= 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

endif

" Suffixes that get lower priority when doing tab completion for filenames.
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc,.png,.jpg


" ---------- AIRLINE ----------

" airline settings (:help airline)
let g:airline_theme           = 'base16_bright'
let g:airline_powerline_fonts = 0
let g:airline_symbols_ascii   = 1

" refresh on startup
if exists(":AirlineRefresh")
  autocmd VimEnter * AirlineRefresh
endif


" ---------- TABS AND INDENTATION ----------

" use spaces instead of tabs
set expandtab

" use shift+tab for literal tabs
inoremap <S-Tab> <C-V><Tab>

" be smart with tabs at the start of a line
set smarttab

" smarter indentation on new lines
set autoindent
set smartindent

" set relevant tabwidths
set shiftwidth=2
set tabstop=2
set softtabstop=2

" smarter linebreaks and show with '> ' at start of broken line
set wrap
set linebreak
if exists('+breakindent')
  set breakindent
  set showbreak=\\\ 
endif

" show context around cursor
set scrolloff=10

" don't use PEP8 recommendation in python
let g:python_recommended_style = 0

" don't re-indent when inserting # in yaml
autocmd FileType yaml setlocal indentkeys-=0#


" ---------- KEY BINDINGS ----------

" <leader> key is [\] by default

" make jk move vertical by visual no by real lines
nnoremap j gj
nnoremap k gk

" toggle folding with \f
nnoremap <leader>f za

" toggle mouse mode
noremap M :call ToggleMouse() <CR>
function! ToggleMouse()
  if &mouse == 'a'
    set mouse=
    echo "Mouse usage disabled"
  else
    set mouse=a
    echo "Mouse usage enabled"
  endif
endfunction

" show diff between current buffer and the file it was loaded from
if !exists(":Diff")
  nnoremap <leader>d :Diff <CR>
  command Diff vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
      \ | wincmd p | diffthis
endif

" commands to show various whitespace
nnoremap <leader>s :ShowSpaces <CR>
command ShowSpaces :set list listchars=eol:¶,space:·,tab:»·
command NoShowSpaces :set nolist

" disable the recording feature, which I mostly trigger by accident
map q <nop>

" ---------- USER CONFIGURATION ----------

" in the end load user vimrc
silent! source ~/.vimrc
